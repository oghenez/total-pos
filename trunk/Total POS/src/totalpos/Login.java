/*
 * Login.java
 *
 * Created on 08-jul-2011, 12:36:33
 */

package totalpos;

import java.sql.SQLException;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Saul Hidalgo
 */
public class Login extends javax.swing.JFrame {

    private TreeMap<String,Integer> tries = new TreeMap<String, Integer>();
    public boolean userChangedHerPass = false; // Nice name xDD

    /** Creates new form Login */
    public Login() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(Constants.appName);
        setResizable(false);

        loginText.setName("loginText"); // NOI18N
        loginText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginTextKeyPressed(evt);
            }
        });

        jLabel1.setText("Usuario");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("Contrase√±a");
        jLabel2.setName("jLabel2"); // NOI18N

        passwordText.setName("passwordText"); // NOI18N
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(passwordText)
                    .addComponent(loginText, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(331, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(346, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(130, 130, 130))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginTextKeyPressed
        
    }//GEN-LAST:event_loginTextKeyPressed

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        try {
            if ( !ConnectionDrivers.existsUser(loginText.getText().trim()) ){
                MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Usuario no existe");
                msg.show(this);
                return;
            }

            if ( ConnectionDrivers.isLocked(loginText.getText().trim()) ){
                MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Usuario bloqueado");
                msg.show(this);
                return;
            }
            ConnectionDrivers.login(loginText.getText(), passwordText.getPassword());

            User u = Shared.giveUser(ConnectionDrivers.listUsers(), loginText.getText());
            if ( u.getDebeCambiarPassword() ){
                ChangePassword cp = new ChangePassword(this, true, u);
                Shared.centerFrame(cp);
                cp.setVisible(true);
                if ( !userChangedHerPass ){
                    MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Debes cambiar el password. Intenta de nuevo.");
                    msg.show(this);
                    return;
                }
            }
            MainWindows mw = new MainWindows(u);
            Shared.centerFrame(mw);
            mw.setVisible(true);
            this.setVisible(false);
            dispose();
        } catch (SQLException ex) {
            MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Error con la base de datos.", ex);
            msg.show(this);
        } catch (Exception ex) {
            MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Error.", ex);
            msg.show(this);

            if ( ex.getMessage().equals(Constants.wrongPasswordMsg) ){
                String l = loginText.getText();

                if ( !tries.containsKey(l) ){
                    tries.put(l, new Integer(1));
                }else if ( tries.get(l).compareTo(new Integer(2)) > 0 ){
                    msg = new MessageBox(MessageBox.SGN_DANGER, "El usuario ha sido bloqueado.");
                    msg.show(this);
                }else{
                    try {
                        tries.put(l, new Integer(tries.get(l) + 1));
                        ConnectionDrivers.lockUser(l);
                    } catch (SQLException ex1) {
                        msg = new MessageBox(MessageBox.SGN_DANGER, "Error con la base de datos.", ex1);
                        msg.show(this);
                    }
                }
                
            }

        }
        
    }//GEN-LAST:event_passwordTextActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField loginText;
    private javax.swing.JPasswordField passwordText;
    // End of variables declaration//GEN-END:variables

}
